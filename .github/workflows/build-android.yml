name: Build Android Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Android Testing
    runs-on: ubuntu-latest
    env:
      VITE_DROPBOX_CLIENT_ID: ${{ secrets.DROPBOX_CLIENT_ID }}
      VITE_DROPBOX_CLIENT_SECRET: ${{ secrets.DROPBOX_CLIENT_SECRET }}
      VITE_IOS_GOOGLE_CLIENT_ID: ${{ secrets.IOS_GOOGLE_CLIENT_ID }}
      VITE_ANDROID_GOOGLE_CLIENT_ID: ${{ secrets.ANDROID_GOOGLE_CLIENT_ID }}
      VITE_ONEDRIVE_CLIENT_ID: ${{ secrets.ONEDRIVE_CLIENT_ID }}
      VITE_ONEDRIVE_ANDROID_HASH: ${{ secrets.ONEDRIVE_ANDROID_HASH }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"

      - name: Install unzip (required by setup-android when using act)
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Create .env file
        run: |
          cat <<EOF > .env
          VITE_DROPBOX_CLIENT_ID=${VITE_DROPBOX_CLIENT_ID}
          VITE_DROPBOX_CLIENT_SECRET=${VITE_DROPBOX_CLIENT_SECRET}
          VITE_IOS_GOOGLE_CLIENT_ID=${VITE_IOS_GOOGLE_CLIENT_ID}
          VITE_ANDROID_GOOGLE_CLIENT_ID=${VITE_ANDROID_GOOGLE_CLIENT_ID}
          VITE_ONEDRIVE_CLIENT_ID=${VITE_ONEDRIVE_CLIENT_ID}
          VITE_ONEDRIVE_ANDROID_HASH=${VITE_ONEDRIVE_ANDROID_HASH}
          EOF

      - name: Install app dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Capacitor sync
        run: npx cap sync

      - name: Extract Android signing key from env
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/app/release.jks.base64
          base64 -d android/app/release.jks.base64 > android/app/release.jks

      - name: Build AAB (Android App Bundle)
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        run: cd android && ./gradlew bundleRelease

      - name: Build APK
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        run: cd android && ./gradlew assembleRelease

      - name: Upload release AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 60

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 60

      - name: Cleanup keystore
        run: rm android/app/release.jks.base64 android/app/release.jks
